1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

DONE. Stored in my local system in the location /home/cloudera/assignments/sales_order_data.csv



2. Store raw data into hdfs location

[cloudera@quickstart ~]$ hdfs dfs -mkdir /assignments

[cloudera@quickstart ~]$ hdfs dfs -put /home/cloudera/assignments/sales_order_data.csv /assignments



3. Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table

[cloudera@quickstart ~]$ Hive
hive> use assignments;
create table sales_order_data_csv
(
ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH float,
ORDERLINENUMBER int,
SALES float,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY string,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string
)
row format delimited
fields terminated by ','
TBLPROPERTIES("skip.header.line.count"="1");



4. Load data from hdfs path into "sales_order_csv" 

load data inpath '/assignments/sales_order_data.csv' into table sales_order_data_csv;



5. Create an internal hive table which will store data in ORC format "sales_order_orc"

create table sales_order_data_orc
(
ORDERNUMBER int,
QUANTITYORDERED int,
PRICEEACH float,
ORDERLINENUMBER int,
SALES float,
STATUS string,
QTR_ID int,
MONTH_ID int,
YEAR_ID int,
PRODUCTLINE string,
MSRP int,
PRODUCTCODE string,
PHONE string,
CITY string,
STATE string,
POSTALCODE string,
COUNTRY string,
TERRITORY string,
CONTACTLASTNAME string,
CONTACTFIRSTNAME string,
DEALSIZE string
)
stored as orc;



6. Load data from "sales_order_csv" into "sales_order_orc"

FROM sales_order_data_csv INSERT OVERWRITE TABLE sales_order_data_orc SELECT *;



Perform below menioned queries on "sales_order_orc" table :

a. Calculate total sales per year

hive> SELECT year_id, SUM(sales) as total_sales
    > FROM sales_order_data_orc
    > GROUP BY year_id;

OUTPUT:

year_id     total_sales             
2003        3516979.547241211
2004        4724162.593383789
2005        1791486.7086791992



b. Find a product for which maximum orders were placed

hive> SELECT productcode, COUNT(ordernumber) AS total_orders
    > FROM sales_order_data_orc
    > GROUP BY productcode
    > ORDER BY total_orders DESC
    > LIMIT 1;
    
OUTPUT:
S18_3232   52



c. Calculate the total sales for each quarter

hive> SELECT qtr_id,
    > SUM(sales) AS total_sales
    > FROM sales_order_data_orc
    > GROUP BY qtr_id;
    
OUTPUT:
qtr_id  total_sales
1       2350817.726501465
2       2048120.3029174805
3       1758910.808959961
4       3874780.010925293


d. In which quarter sales was minimum

hive> SELECT qtr_id,
    > SUM(sales) AS total_sales
    > FROM sales_order_data_orc
    > GROUP BY qtr_id
    > ORDER BY total_sales
    > LIMIT 1;
    
OUTPUT:
qtr_id  total_sales
3       1758910.808959961

    
e. In which country sales was maximum and in which country sales was minimum

Country with Maximum Sales -
hive> SELECT country,
    > SUM(sales) AS total_sales
    > FROM sales_order_data_orc
    > GROUP BY country
    > ORDER BY total_sales DESC
    > LIMIT 1;

OUTPUT:
country total_sales
USA     3627982.825744629

Country with Maximum Sales -
hive> SELECT country,
    > SUM(sales) AS total_sales
    > FROM sales_order_data_orc
    > GROUP BY country
    > ORDER BY total_sales
    > LIMIT 1;
    
OUTPUT:
country total_sales
Ireland 57756.43029785156


f. Calculate quarterly sales for each city
h. Find a month for each year in which maximum number of quantities were sold
